// automatically generated by the FlatBuffers compiler, do not modify

package com.example.hellojni.ReposNormal;

import com.google.gson.*;

@SuppressWarnings("unused")
public final class Repo {
  long id;
  String name;
  String full_name;
  User owner;
  String html_url;
  String description;
  boolean fork;
  String url;
  String created_at;
  String updated_at;
  String pushed_at;
  String git_url;
  String ssh_url;
  String clone_url;
  String svn_url;
  String homepage;
  long size;
  int stargazers_count;
  int watchers_count;
  String language;
  boolean has_issues;
  boolean has_downloads;
  boolean has_wiki;
  boolean has_pages;
  int forks_count;
  String mirror_url;
  int open_issues_count;
  int forks;
  int open_issues;
  int watchers;
  String default_branch;

  public Repo fromJson(String json) {
    JsonObject jsonObj = (new JsonParser().parse(json)).getAsJsonObject();
    this.id = jsonObj.get("id").getAsLong();
    this.name = jsonObj.get("name").getAsString();
    this.full_name = jsonObj.get("full_name").getAsString();
    this.owner = (new User().fromJson(jsonObj.get("owner").getAsJsonObject().toString()));
    this.html_url = jsonObj.get("html_url").getAsString();
    this.description = jsonObj.has("description")?jsonObj.get("description").getAsString():"";
    this.fork = jsonObj.get("fork").getAsBoolean();
    this.url = jsonObj.get("url").getAsString();
    this.created_at = jsonObj.get("created_at").getAsString();
    this.updated_at = jsonObj.get("updated_at").getAsString();
    this.pushed_at = jsonObj.get("pushed_at").getAsString();
    this.git_url = jsonObj.get("git_url").getAsString();
    this.ssh_url = jsonObj.get("ssh_url").getAsString();
    this.clone_url = jsonObj.get("clone_url").getAsString();
    this.svn_url = jsonObj.get("svn_url").getAsString();
    this.homepage = jsonObj.has("homepage")?jsonObj.get("homepage").getAsString():"";
    this.size = jsonObj.get("size").getAsLong();
    this.stargazers_count = jsonObj.get("stargazers_count").getAsInt();
    this.watchers_count = jsonObj.get("watchers_count").getAsInt();
    this.language = jsonObj.has("language")?jsonObj.get("language").getAsString():"";
    this.has_issues = jsonObj.get("has_issues").getAsBoolean();
    this.has_downloads = jsonObj.get("has_downloads").getAsBoolean();
    this.has_wiki = jsonObj.get("has_wiki").getAsBoolean();
    this.has_pages = jsonObj.get("has_pages").getAsBoolean();
    this.forks_count = jsonObj.get("forks_count").getAsInt();
    this.mirror_url = jsonObj.has("mirror_url")?jsonObj.get("mirror_url").getAsString():"";
    this.open_issues_count = jsonObj.get("open_issues_count").getAsInt();
    this.forks = jsonObj.get("forks").getAsInt();
    this.open_issues = jsonObj.get("open_issues").getAsInt();
    this.watchers = jsonObj.get("watchers").getAsInt();
    this.default_branch = jsonObj.get("default_branch").getAsString();
    return this;
  }
}

